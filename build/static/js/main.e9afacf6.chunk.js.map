{"version":3,"sources":["libs/Split/index.tsx","components/Form/InputMessage.tsx","components/Form/Form.tsx","actions/messages.action.tsx","components/Form/index.tsx","components/Messages/Time.tsx","components/Messages/Loading.tsx","components/Messages/Tool.tsx","components/Messages/MessageContent.tsx","components/Messages/Message.tsx","components/Messages/index.tsx","components/Messages/Messages.tsx","App.tsx","serviceWorker.js","reducers/messages.reducer.tsx","reducers/index.tsx","api/message.tsx","redux-sagas/message.sagas.tsx","redux-sagas/index.tsx","store.tsx","index.tsx"],"names":["Split","keyReplace","maxLength","splitKey","countSource","source","error","message","_this","this","main","map","node","replace","String","length","splited","split","splitedLength","i","checkLength","index","createMessage","newTxt","concacMessage","sourceLength","value","arguments","undefined","initMessage","push","val1","concat","val2","InputMessage","state","onChange","e","target","splitMessage","setState","props","react_default","a","createElement","TextField_default","placeholder","className","React","Component","FormComponent","args","onSubmit","preventDefault","addMessage","_this$state","id","action","Form_InputMessage","Typography_default","Button_default","disabled","Boolean","variant","color","type","Forward_default","ADD_MESSAGE","UPDATE_MESSAGE","DELETE_A_MESSAGE","ADD_MESSAGE_SUCCESS","UPDATE_MESSAGE_SUCCESS","DELETE_A_MESSAGE_SUCCESS","connect","dispatch","data","messageId","uniqid","createdAt","Date","getTime","Form","getDoubleTime","num","Time","time","index_es","getHours","getMinutes","Loading","Tool","anchorEl","handleClick","event","currentTarget","handleClose","open","aria-label","aria-owns","aria-haspopup","onClick","MoreVert_default","onClose","onDelete","Delete_default","MessageContent","updateMessage","_this$props","deleteMessage","Object","objectWithoutProperties","window","confirm","_this$props2","_this$props3","updatedAt","updated","Number","getMeta","Tool_Tool","_this$props4","pending","deleting","messages","MESSAGES","_ref","Message","key","App","font","document","href","rel","getElementsByTagName","appendChild","getElementById","parentNode","removeChild","components_Messages","components_Form","PureComponent","location","hostname","match","initState","messageListReducers","toConsumableArray","objectSpread","filter","reducers","combineReducers","random","Math","floor","addMessageAPI","Promise","resolve","reject","setTimeout","deleteMessageAPI","watchAddMessage","watchDeleteMessage","watchUpdateMessage","addMessageSaga","respon","regenerator_default","wrap","_context","prev","next","put","call","sent","t0","stop","_marked","_context2","select","_marked2","_context3","_marked3","_context4","all","takeEvery","_marked4","rooSaga","redux_sagas_marked","sagaMiddleWare","createSagaMiddleWare","store","createStore","applyMiddleware","run","rootSaga","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9afacf6.chunk.js","sourcesContent":["/**\r\n * author: Nguyen Thien Quang\r\n * date: 12/03/2018\r\n * description: Phân tích 1 chuỗi thành những chuỗi có chiều dài được xác định\r\n * keywords: split string.\r\n */\r\n\r\nclass Split {\r\n\r\n    // Chuỗi replace\r\n    protected keyReplace: string = '&1;';\r\n\r\n    // Chiều dài tối đa của chuỗi\r\n    protected maxLength: number = 50;\r\n\r\n    // Chuỗi dùng để chia tách\r\n    protected splitKey: string = ' ';\r\n\r\n    // số lượng chuỗi hiện tại đã chia tách thành công\r\n    protected countSource: number = 0;\r\n\r\n    // Kết quả\r\n    protected source: string[] = [];\r\n\r\n    // thông báo có lỗi\r\n    protected error: boolean = false;\r\n\r\n    public splitMessage(message: string): boolean | string[] {\r\n        this.main(message);\r\n\r\n        if(this.error){\r\n            return false;\r\n        }\r\n\r\n        // chỉ replace 1 chuỗi con duy nhất trong chuỗi con để\r\n        // không làm ảnh hưởng tới tin nhắn của người dùng\r\n        return this.source.map(node => {\r\n            return (node.replace(this.keyReplace, String(this.source.length)));\r\n        });\r\n    }\r\n\r\n    protected main(message: string): void {\r\n\r\n        if(message.length <= this.maxLength){\r\n            this.source = [message];\r\n            return;\r\n        }\r\n\r\n        // Chuỗi phân chia bởi dấu phân tách\r\n        const splited: string[] = message.split(this.splitKey);\r\n\r\n        const splitedLength = splited.length;\r\n\r\n        for (let i = 0; i < splitedLength; i++) {\r\n\r\n            const node: string = splited[i];\r\n\r\n            // kiểm tra chuỗi chuẩn bị nối có chiều dài được chấp nhận hay không\r\n            if (!this.checkLength(node)) {\r\n                this.error = true;\r\n                break;\r\n            }\r\n\r\n            const index = this.source.length - 1;\r\n\r\n            // nếu là chuỗi rỗng thì bỏ qua\r\n            if (this.source.length === 0) {\r\n                this.createMessage(1, node);\r\n            } else {\r\n\r\n                const newTxt = this.concacMessage(this.source[index], node);\r\n                if (this.checkLength(newTxt, false)) {\r\n                    this.source[index] = newTxt;\r\n                } else {\r\n                    this.createMessage(index + 2, node);\r\n                }\r\n\r\n            }\r\n\r\n            const sourceLength = this.source.length;\r\n\r\n            /**\r\n             * Kiểm tra đếm số đã chính xác hay chưa\r\n             * trường hợp đếm số 1/2 qua 1/10 thì chuỗi đã bị kéo dài ra\r\n             * nên phải tính toán lại từ đầu\r\n             */\r\n            if (this.countSource - sourceLength > 10) {\r\n                return this.main(message);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Kiểm tra chiều dài của chuỗi\r\n     * @param value string\r\n     */\r\n    protected checkLength(value: string, isInit = true) {\r\n\r\n        /**\r\n         * Nếu là chuỗi khởi tạo thì nó sẽ bao gồm chuỗi đếm\r\n         * nên phải cộng thêm độ dài chuỗi đếm vào\r\n         * Ví dụ: chuỗi \"aaaa...\" dài 50 ký tự, nếu cộng thêm chuỗi đếm 1/2\r\n         * thì chuỗi cuối sẽ bị lỗi\r\n         */\r\n        if(isInit){\r\n            return this.countSource + value.length < this.maxLength + this.keyReplace.length;\r\n        }else{\r\n            return value.length < this.maxLength + this.keyReplace.length;\r\n        }\r\n    }\r\n\r\n    // khởi tạo 1 chuỗi mới\r\n    // và đưa nó vào danh sách nếu thỏa mãn điều kiện\r\n    protected createMessage(index: number, node: string) {\r\n        // khởi tạo 1 chuỗi mới\r\n        const newTxt = this.initMessage(index, node);\r\n\r\n        // kiểm tra chiều dài của chuỗi\r\n        if (this.checkLength(newTxt)) {\r\n            this.source.push(newTxt);\r\n            this.countSource++;\r\n        } else {\r\n            this.error = true;\r\n        }\r\n    }\r\n    /**\r\n     * tạo chuỗi khởi tạo\r\n     * @param index : vị trí hiện tại của chuỗi trong danh sách chuỗi đã phân tách thành công\r\n     * @param val1 : chuỗi\r\n     */\r\n    protected initMessage(index: number, val1: string) {\r\n        return `${index}/${this.keyReplace} ${val1}`;\r\n    }\r\n\r\n    // Gộp 2 chuỗi con lại thành 1 chuỗi lớn hơn\r\n    protected concacMessage(val1: string, val2: string) {\r\n        return `${val1} ${val2}`;\r\n    }\r\n}\r\n\r\nexport default function splitMessage(message: string){\r\n\r\n    const split = new Split();\r\n\r\n    return split.splitMessage(message);\r\n\r\n}\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport splitMessage from \"../../libs/Split\";\r\n\r\nexport interface IStateInputMessage {\r\n    error: boolean;\r\n};\r\n\r\nexport interface IChangeState { \r\n    source: string[], \r\n    message: string }\r\n\r\nexport interface IPropsInputMessage {\r\n    message: string;\r\n    onChange: (args: IChangeState) => void;\r\n}\r\n\r\nclass InputMessage extends React.Component<IPropsInputMessage, IStateInputMessage>{\r\n\r\n    state: IStateInputMessage = {\r\n        error: false\r\n    };\r\n\r\n    render() {\r\n        const { message } = this.props;\r\n        const { error } = this.state;\r\n        return (\r\n            <TextField placeholder=\"Nhập tin nhắn để gửi\" className=\"message-input-field\" error={error} value={message} onChange={this.onChange} />\r\n        );\r\n    }\r\n\r\n    protected onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const message: string = e.target.value;\r\n\r\n        let source: any = splitMessage(message);\r\n\r\n        let error = false;\r\n\r\n        if (source === false) {\r\n            error = true;\r\n            source = [];\r\n        }\r\n\r\n        if (this.state.error !== error) {\r\n            this.setState({ error });\r\n        }\r\n\r\n        this.props.onChange({ message, source });\r\n}\r\n}\r\n\r\nexport default InputMessage;\r\n","import React, { FormEvent } from \"react\";\r\nimport InputMessage, { IChangeState } from \"./InputMessage\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Forward from \"@material-ui/icons/Forward\";\r\nimport \"./style.scss\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\ninterface IStateFormComponent {\r\n    source: string[];\r\n    message: string;\r\n}\r\n\r\nclass FormComponent extends React.Component<any, IStateFormComponent> {\r\n    state = {\r\n        source: [],\r\n        message: ''\r\n    };\r\n\r\n    render() {\r\n\r\n        const { message, source } = this.state;\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit} id=\"form-message\" action=\"#\" className=\"d-flex w-100 align-items-end justify-content-center\">\r\n                <InputMessage message={message} onChange={this.onChange} />\r\n                <div className=\"submit-wrapper\">\r\n                    <Typography id=\"count-message\">{message.length} / {source.length}</Typography>\r\n                    <Button disabled={!Boolean(source.length) || !message.length} className=\"rounded-0\" variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        <Forward />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n\r\n    }\r\n\r\n    onChange = (args: IChangeState) => {\r\n        this.setState({\r\n            message: args.message,\r\n            source: args.source\r\n        });\r\n    }\r\n\r\n    onSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        const { addMessage } = this.props;\r\n\r\n        const { source } = this.state;\r\n\r\n        source.map(message => {\r\n            addMessage({ message });\r\n        });\r\n\r\n        this.setState({message: '', source: []});\r\n    }\r\n\r\n}\r\n\r\nexport default FormComponent;\r\n","import { IAction } from \"../index.d\";\r\nimport uniqid from \"uniqid\";\r\n\r\n/**\r\n * Nguyen Thien Quang\r\n * Description: Actions of messages redux\r\n * Keyword: actions of messages, actions\r\n */\r\n\r\nexport const ADD_MESSAGE        = \"ADD_MESSAGE\";\r\nexport const UPDATE_MESSAGE     = \"UPDATE_MESSAGE\";\r\nexport const DELETE_MESSAGES    = \"DELETE_MESSAGES\";\r\nexport const DELETE_A_MESSAGE   = \"DELETE_A_MESSAGE\";\r\n\r\nexport const ADD_MESSAGE_SUCCESS  = \"ADD_MESSAGE_SUCCESS\";\r\nexport const ADD_MESSAGE_PENDING  = \"ADD_MESSAGE_PENDING\";\r\n\r\nexport const UPDATE_MESSAGE_SUCCESS = \"UPDATE_MESSAGE_SUCCESS\";\r\nexport const DELETE_A_MESSAGE_SUCCESS = \"DELETE_A_MESSAGE_SUCCESS\";\r\n\r\nexport interface IMessage {\r\n    messageId?: string;\r\n    message?: string;\r\n    createdAt?: number;\r\n    updatedAt?: number;\r\n    updated?: boolean;\r\n    error?: boolean;\r\n    pending?: boolean;\r\n    deleting?: boolean;\r\n}\r\n\r\nexport interface IActionMessage extends IAction {\r\n    data?: IMessage;\r\n    messageId: string;\r\n}\r\n\r\nexport const addMessage = (data: IMessage): IAction => {\r\n    data.messageId = uniqid();\r\n    data.createdAt = new Date().getTime();\r\n    return {\r\n        type: ADD_MESSAGE,\r\n        data\r\n    };\r\n}\r\n\r\nexport const updateMessage = (messageId: string, data: IMessage) => {\r\n    data.updatedAt = new Date().getTime();\r\n    data.updated = true;\r\n    return {\r\n        type: UPDATE_MESSAGE,\r\n        messageId,\r\n        data\r\n    };\r\n}\r\n\r\nexport const deleteMessages = () => {\r\n    return {\r\n        type: DELETE_MESSAGES\r\n    };\r\n}\r\n\r\nexport const deleteMessage = (messageId: string) => {\r\n    return {\r\n        type: DELETE_A_MESSAGE,\r\n        messageId\r\n    }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport Form from \"./Form\";\r\nimport { addMessage, IMessage, ADD_MESSAGE } from \"../../actions/messages.action\";\r\nimport { IReducers } from \"../../reducers\";\r\n\r\nconst mapStateToProps = (state: IReducers) => {\r\n    return {};\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addMessage: (data: IMessage) => {\r\n            dispatch(addMessage(data));\r\n        }\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\ninterface IProps{\r\n    time: number;\r\n}\r\n\r\nconst getDoubleTime = (num: number) => num < 10 ? `0${num}` : num;\r\n\r\nexport default (props: IProps) => {\r\n    const time = new Date(props.time);\r\n    return <Typography variant=\"caption\">{getDoubleTime(time.getHours())}:{getDoubleTime(time.getMinutes())}</Typography>\r\n}","import React from \"react\";\r\nimport { CircularProgress, Typography } from \"@material-ui/core\";\r\n\r\nexport default (props: any) => {\r\n    return (\r\n        <Typography variant=\"caption\" className=\"d-flex align-items-center justify-content-center\"><CircularProgress className=\"loading\" /> <span>Đang gửi</span></Typography>\r\n    )\r\n}","import React from \"react\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\r\n\r\ninterface IProps {\r\n    onDelete(): void;\r\n}\r\n\r\nexport default class Tool extends React.Component<IProps, {}>{\r\n    state = {\r\n      anchorEl: null,\r\n    };\r\n  \r\n    handleClick = (event: any) => {\r\n      this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n  \r\n    handleClose = () => {\r\n      this.setState({ anchorEl: null });\r\n    };\r\n    render(){\r\n        const { anchorEl } = this.state;\r\n        const open = Boolean(anchorEl);\r\n        return (\r\n            <div className=\"tools-wrapper\">\r\n            <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"More\"\r\n                aria-owns={open ? 'long-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n            >\r\n            <MenuItem onClick={this.props.onDelete}>\r\n                <Delete /> Xóa tin nhắn\r\n            </MenuItem>\r\n            </Menu>\r\n        </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { IMessage } from \"../../actions/messages.action\";\r\nimport Time from \"./Time\";\r\nimport { Paper, Typography } from \"@material-ui/core\";\r\nimport Loading from \"./Loading\";\r\nimport Tool from \"./Tool\";\r\n\r\ninterface IProps extends IMessage {\r\n    updateMessage(data: IMessage): void;\r\n    deleteMessage(messageId: string): void;\r\n}\r\n\r\nclass MessageContent extends React.Component<IProps, {}> {\r\n    render() {\r\n        const { message, messageId, createdAt, updatedAt, updated } = this.props;\r\n\r\n        return (\r\n            <div id={`message-${messageId}`} className={\"message \"}>\r\n                <div className=\"d-inline-block\">\r\n                    <Paper className=\"message-wrapper d-flex\">\r\n                        <div className=\"message-content w-100\">\r\n                            <div className=\"message-des w-100\">\r\n                                {message}\r\n                            </div>\r\n                            <div className=\"message-meta d-flex w-100 align-items-center jusity-content-between\">\r\n                                <Time time={Number(createdAt)} />\r\n                                {this.getMeta()}\r\n                            </div>\r\n                        </div>\r\n                        <Tool onDelete={this.deleteMessage} />\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    protected getMeta() {\r\n        const { pending, error, deleting } = this.props;\r\n        if (pending) {\r\n            return <Loading />;\r\n        }\r\n        if (deleting) {\r\n            return <Typography variant=\"caption\">Đang xóa</Typography>;\r\n        }\r\n        if (error) {\r\n            return <Typography onClick={this.updateMessage} className=\"pointer\" variant=\"caption\" color=\"error\">Có lỗi, nhấn để <span>gửi lại</span></Typography>;\r\n        }\r\n        if (!error) {\r\n            return <Typography variant=\"caption\">Đã gửi</Typography>;\r\n        }\r\n    }\r\n\r\n    protected updateMessage = () => {\r\n        const { updateMessage, deleteMessage, ...other } = this.props;\r\n        updateMessage(other);\r\n    }\r\n\r\n    protected deleteMessage = () => {\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            const { deleteMessage, messageId } = this.props;\r\n            deleteMessage(messageId as string);\r\n        }\r\n    }\r\n}\r\n\r\nexport default MessageContent;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport MessageContent from \"./MessageContent\";\r\nimport { deleteMessage, IMessage, updateMessage } from \"../../actions/messages.action\";\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    deleteMessage: (messageId: string) => {\r\n        dispatch(deleteMessage(messageId));\r\n    },\r\n    updateMessage: (data: IMessage) => {\r\n        const { messageId } = data;\r\n        dispatch(updateMessage((messageId as string), data));\r\n    }\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MessageContent);\r\n","import { connect } from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport { IReducers } from \"../../reducers\";\r\nimport \"./style.scss\";\r\n\r\nconst mapStateToProps = (state: IReducers) => {\r\n    return {\r\n        messages: state.MESSAGES\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)((Messages as any));\r\n","import React from \"react\";\r\nimport { IMessage } from \"../../actions/messages.action\";\r\nimport Message from \"./Message\";\r\n\r\ninterface IProps {\r\n    messages: IMessage[];\r\n    [key: string]: any;\r\n}\r\n\r\nexport default (props: IProps) => {\r\n    const {messages} = props;\r\n\r\n    return (\r\n        <div id=\"messages\">\r\n            {\r\n                messages.map(({message, createdAt, updated, updatedAt, messageId, pending, error, deleting}) => {\r\n                    return <Message \r\n                        key={messageId} \r\n                        message={message} \r\n                        createdAt={createdAt} \r\n                        updated={updated} \r\n                        updatedAt={updatedAt} \r\n                        pending={pending}\r\n                        error={error}\r\n                        messageId={messageId}\r\n                        deleting={deleting}\r\n                    />;\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, { PureComponent } from 'react';\nimport AddMessageContainer from './components/Form';\nimport MessageContainer from \"./components/Messages\";\nimport \"./App.scss\";\n\nclass App extends PureComponent {\n\n  UNSAFE_componentWillMount() {\n    const font = document.createElement(\"link\");\n    font.href = \"https://fonts.googleapis.com/css?family=Roboto:300,400,500\";\n    font.rel = \"stylesheet\";\n    font.id = \"font-roboto\";\n\n    document.getElementsByTagName('head')[0].appendChild(font);\n  }\n\n  componentWillUnmount() {\n    const font: any = document.getElementById(\"font-roboto\");\n    font.parentNode.removeChild(font);\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <ul>\n          <li>1. Có thể thêm sửa xóa tin nhắn</li>\n          <li>2. Lỗi có thể xảy ra, cái này là random để xem trường hợp</li>\n        </ul>\n        <div id=\"message-container\">\n          <MessageContainer />\n          <AddMessageContainer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\r\n * Author: Nguyen Thien Quang\r\n * Description: reducer Messages of redux\r\n * keyword: redux, messages, reducer of messages\r\n */\r\n\r\nimport { DELETE_MESSAGES, IMessage, IActionMessage, ADD_MESSAGE_SUCCESS, UPDATE_MESSAGE_SUCCESS, DELETE_A_MESSAGE_SUCCESS } from \"../actions/messages.action\";\r\n\r\nconst initState: IMessage[] = [];\r\n\r\nconst messageListReducers = (state: IMessage[] = initState, action: IActionMessage): IMessage[] => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE_SUCCESS:\r\n            return [ ...state, (action.data as IMessage)  ];\r\n            \r\n        case UPDATE_MESSAGE_SUCCESS:\r\n            return state.map((node: IMessage) => {\r\n                if(node.messageId === action.messageId){\r\n                    node = {...node, ...action.data};\r\n                }\r\n                return node;\r\n            });\r\n\r\n        case DELETE_A_MESSAGE_SUCCESS:\r\n            return state.filter(node => node.messageId !== action.messageId);\r\n\r\n        case DELETE_MESSAGES:\r\n            return initState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageListReducers;\r\n","/**\r\n * Author: Nguyen Thien Quang\r\n * Description: reducers for store ( redux )\r\n * keywords: reducers, redux, reducers of redux\r\n */\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\n// @ REDUCERS\r\nimport MESSAGES from \"./messages.reducer\";\r\nimport { IMessage } from \"../actions/messages.action\";\r\n// END REDUCERS\r\n\r\nexport interface IReducers {\r\n    MESSAGES: IMessage[];\r\n}\r\n\r\nconst reducers = combineReducers({ MESSAGES });\r\n\r\nexport default reducers;\r\n","/**\r\n * Nguyen Thien Quang\r\n * Description: Virtual API\r\n * Keywords: Virtual API for react saga\r\n */\r\n\r\nimport { IMessage } from \"../actions/messages.action\";\r\n\r\nconst random = () => (Math.floor(Math.random() * 2) + 1 )*100;\r\n\r\nlet i = 0;\r\nexport const addMessageAPI = (data: IMessage) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const s = random();\r\n            if(s > 100 || data.error){\r\n                resolve(data);\r\n            }else{\r\n                reject(false);\r\n            }\r\n        }, random());\r\n    });\r\n}\r\n\r\nexport const updateMessageAPI = (data: IMessage) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(data);\r\n        }, random());\r\n    });\r\n}\r\n\r\nexport const deleteMessageAPI = (messageId: string) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(true);\r\n        }, random());\r\n    });\r\n}\r\n\r\nexport const deleteMessagesAPI = () => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            resolve(true);\r\n        }, random());\r\n    });\r\n}\r\n","/**\r\n * Nguyen Thien Quang\r\n * Description: message async sagas\r\n * Keywords: message sagas\r\n */\r\n\r\nimport { put, takeEvery, call, all, select } from \"redux-saga/effects\";\r\nimport { addMessageAPI, deleteMessageAPI } from \"../api/message\";\r\nimport { ADD_MESSAGE, ADD_MESSAGE_SUCCESS, UPDATE_MESSAGE_SUCCESS, DELETE_A_MESSAGE, DELETE_A_MESSAGE_SUCCESS, UPDATE_MESSAGE } from \"../actions/messages.action\";\r\nimport { IAction } from \"../index.d\";\r\n\r\nexport function* watchAddMessage(action: IAction) {\r\n    action.data.pending = true;\r\n    yield put({ type: ADD_MESSAGE_SUCCESS, data: action.data, messageId: action.data.messageId });\r\n    try {\r\n        const respon = yield call(addMessageAPI, action.data);\r\n        respon.pending = false;\r\n        respon.error = false;\r\n        yield put({ type: UPDATE_MESSAGE_SUCCESS, data: respon, messageId: action.data.messageId });\r\n    } catch (error) {\r\n        action.data.pending = false;\r\n        action.data.error = true;\r\n        yield put({ type: UPDATE_MESSAGE_SUCCESS, data: action.data, messageId: action.data.messageId });\r\n    }\r\n}\r\n\r\nexport function* watchDeleteMessage(action: IAction) {\r\n    yield put({ type: UPDATE_MESSAGE_SUCCESS, messageId: action.messageId, data: { deleting: true } });\r\n    try {\r\n        const respon = yield call(deleteMessageAPI, action.messageId);\r\n        if (respon) {\r\n            yield put({ type: DELETE_A_MESSAGE_SUCCESS, messageId: action.messageId });\r\n        }\r\n    } catch (error) {\r\n        const messages = yield select((state) => state.MESSAGES);\r\n        const data = messages[action.messageId];\r\n        data.error = true;\r\n        data.deleting = false;\r\n        yield put({ type: UPDATE_MESSAGE_SUCCESS, data, messageId: action.messageId });\r\n    }\r\n}\r\n\r\nexport function* watchUpdateMessage(action: IAction) {\r\n    yield put({ type: UPDATE_MESSAGE_SUCCESS, data:{... action.data, pending: true}, messageId: action.data.messageId });\r\n    try {\r\n        const respon = yield call(addMessageAPI, action.data);\r\n        respon.pending = false;\r\n        respon.error = false;\r\n        yield put({ type: UPDATE_MESSAGE_SUCCESS, data: respon, messageId: action.data.messageId });\r\n    } catch (error) {\r\n        action.data.pending = false;\r\n        action.data.error = true;\r\n        yield put({ type: UPDATE_MESSAGE_SUCCESS, data: action.data, messageId: action.data.messageId });\r\n    }\r\n}\r\n\r\nexport function* addMessageSaga() {\r\n    yield all([\r\n        takeEvery(ADD_MESSAGE, watchAddMessage),\r\n        takeEvery(UPDATE_MESSAGE, watchUpdateMessage),\r\n        takeEvery(DELETE_A_MESSAGE, watchDeleteMessage)\r\n    ]);\r\n}\r\n","import { all, call } from \"redux-saga/effects\";\r\nimport { addMessageSaga } from \"./message.sagas\";\r\n\r\nexport default function* rooSaga(){\r\n    yield call(addMessageSaga);\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleWare from \"redux-saga\";\r\nimport reducers from \"./reducers\";\r\nimport rootSaga from \"./redux-sagas\";\r\n\r\nconst sagaMiddleWare = createSagaMiddleWare();\r\n\r\nconst store = createStore(reducers, applyMiddleware(sagaMiddleWare));\r\n\r\nsagaMiddleWare.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}